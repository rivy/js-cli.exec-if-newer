#!/usr/bin/env node
let e=(r=function*(e){const t=yield a(e.source),r=yield a(e.target);if(!!e.target.filter(function(e){return!n.generateTasks(e,{case:!0})[0].dynamic}).find(function(e){return!o.existsSync(e)})||function(e,t){const r=e=>new Date(e.mtimeMs),i=(e,t)=>t.getTime()>e.getTime()?t:e,n=new Date(0),s=e.map(r).reduce(i,n),o=t.map(r).reduce(i,n);return s.getTime()>o.getTime()}(t,r))try{const t=function(e){if(e._&&e._.length)return e._.join(" ");throw new Error("Missing command")}(e),r=s.shell(t);r.stdout.pipe(process.stdout),r.stderr.pipe(process.stderr),process.stdin.pipe(r.stdin),yield r,process.exit()}catch(e){console.error(e.message),process.exit(1)}else process.exit()},t=function(){var e=r.apply(this,arguments);return new Promise(function(t,r){return function i(n,s){try{var o=e[n](s),a=o.value}catch(e){return void r(e)}if(!o.done)return Promise.resolve(a).then(function(e){i("next",e)},function(e){i("throw",e)});t(a)}("next")})},function(e){return t.apply(this,arguments)});var t,r;const i=require("yargs"),n=require("fast-glob"),s=require("execa"),o=require("fs");function a(e){const t=/^win/i.test(process.platform);return n(e,{case:!t,stats:!0})}e(i.example("$0 --source src/** --source assets/** --target dist/** npm run build").option("s",{alias:"source",demandOption:!0,describe:"A glob describing the source files that may be updated. May be supplied more than once for additional source files.",type:"array",nargs:1}).option("t",{alias:"target",demandOption:!0,describe:"A glob describing the target files to which the source files will be compared. May be supplied more than once for additional target files.",type:"array",nargs:1}).wrap(i.terminalWidth()).argv);